/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect } from "react";

import { useLoader } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import useColorsStore from "@/store/useColorsStore";
import * as THREE from "three";
import useImageStore from "@/store/useImageStore";
import useHistoryStore from "@/store/useHistoryStore";

export default function Model({ textures }) {
  const { nodes, materials } = useGLTF("/models/newshirt.glb");
  const { garmentColor } = useHistoryStore().state;
  let frontMaterial = nodes.Front.material.clone();
  const backMaterial = nodes.Back.material.clone();
  const collarMaterial = nodes.Collar.material.clone();
  const leftShoulderMaterial = nodes.Left.material.clone();
  const rightShoulderMaterial = nodes.Right.material.clone();
  const innerMaterial = nodes.Inner.material.clone();

  //   // Apply texture to all cloned materials
  useEffect(() => {
    const materials = {
      front: frontMaterial,
      back: backMaterial,
      collar: collarMaterial,
      leftSleeve: leftShoulderMaterial,
      rightSleeve: rightShoulderMaterial,
    };

    Object.keys(textures).forEach((key) => {
      if (textures[key] && materials[key]) {
        textures[key].flipY = false; // Set the flipY property for each texture
        textures[key].needsUpdate = true; // Update the texture

        materials[key].map = textures[key]; // Assign the texture to the correct material
        materials[key].needsUpdate = true; // Ensure the material updates to reflect the new texture
      }
    });
  }, [textures]);

  return (
    <group dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Collar.geometry}
        material={collarMaterial}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Inner.geometry}
        material={innerMaterial}
        material-color={garmentColor}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_107167.geometry}
        material={nodes.StitchMatShape_107167.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_107224.geometry}
        material={nodes.StitchMatShape_107224.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_107338.geometry}
        material={nodes.StitchMatShape_107338.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_107452.geometry}
        material={nodes.StitchMatShape_107452.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_107690.geometry}
        material={nodes.StitchMatShape_107690.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_107766.geometry}
        material={nodes.StitchMatShape_107766.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_107880.geometry}
        material={nodes.StitchMatShape_107880.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_107994.geometry}
        material={nodes.StitchMatShape_107994.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_108164.geometry}
        material={nodes.StitchMatShape_108164.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StitchMatShape_108334.geometry}
        material={nodes.StitchMatShape_108334.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Front.geometry}
        material={frontMaterial}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Right.geometry}
        material={rightShoulderMaterial}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Left.geometry}
        material={leftShoulderMaterial}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Back.geometry}
        material={backMaterial}
      />
    </group>
  );
}

useGLTF.preload("/models/newshirt.glb");
